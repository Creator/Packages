 -- graphics 1.2.1 by Benedict Allen
 --[[ The MIT License (MIT)

Copyright (c) 2015 Benedict Allen

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
 ]]
local e="graphics" local t=setmetatable({},{__index=getfenv()})t._G=t local a={} local function o(h) if a[h]then local r,d=loadstring(a[h],"["..e.."] "..h..".lua")if not r then error(d,0)end local l=setmetatable({},{__index=t}) setfenv(r,l)local u,c=pcall(r)if not u then error(c,0)end if c==nil then c={} for m,f in pairs(l)do c[m]=f end end t[h]=c return c else return error"file not found"end end local i={{name="drawable",path="drawable",url="https://raw.githubusercontent.com/awsumben13/Graphics-Packages/master/build/drawable"}}local n=dofile".package/api.lua" for h=1,#i do if not n.exists(i[h].path)then if  not i[h].url or not n.install(i[h].path,i[h].url)then printError("Requires package "..i[h].name.." and cannot download.")return end end t[i[h].name]=n.load(i[h].path)end local s={} a["colour"]=" lookup={[\"0\"]=colours.white,[\"1\"]=colours.orange,[\"2\"]=colours.magenta,[\"3\"]=colours.lightBlue,[\"4\"]=colours.yellow,[\"5\"]=colours.lime,[\"6\"]=colours.pink,[\"7\"]=colours.grey,[\"8\"]=colours.lightGrey,[\"9\"]=colours.cyan,[\"A\"]=colours.purple,[\"B\"]=colours.blue,[\"C\"]=colours.brown,[\"D\"]=colours.green,[\"E\"]=colours.red,[\"F\"]=colours.black,[\" \"]=0}save={}for e,t in pairs(lookup)do save[t]=e end" a["image"]=" function save(e)local t=\"\" for a=1,e.height do for o=1,e.width do local i,n,s=e:getPixel(o,a)i=colour.save[i] n=colour.save[n]if#s==0 then s=\" \"i=colours.save[0]end t=t..i..n..s end t=t..\"\\n\"end return t:sub(1,-2)end function load(e)local t={}local a=1 for s=1,#e do if e:sub(s,s)==\"\\n\"then table.insert(t,e:sub(a,s-1))a=s+1 end end table.insert(t,e:sub(a))local o=#t[1]/3 local i=#t local n=drawable:new(o,i) for s=1,#t do local h=1 for r in t[s]:gmatch(\"[0123456789ABCDEF ][0123456789ABCDEF ].\")do local d=colour.lookup[r:sub(1,1)]local l=colour.lookup[r:sub(2,2)]local u=r:sub(3,3)if n.pixels[s]and n.pixels[s][h]then n.pixels[s][h]={bc=d,tc=l,char=u}end h=h+1 end end return n end" a["video"]="local function e(s)local h=drawable:new(s.width,s.height) h:foreach(function(r,d,l,u,c) return s:getPixel(u,c)end)return h end local function t(s,h,r,d) local l,u,c=s:getPixel(r,d)local m,f,w=h:getPixel(r,d)return l~=m or u~=f or c~=w end local function a(s,h,r)return(h-1)*r+s-1 end local function o(s,h)s=tostring(s)return(\" \"):rep(math.max( h-#s,0))..s end local function i(s,h,r)if r==\"\"then s=0 r=\" \"end return colour.save[s]..colour.save[h]..r end local function n(h,r) h=h:gsub(\"^%s*\",\"\")local s=tonumber(h)return s%r+1,math.floor(s/r)+1 end function save(s)local r=s[1]local d,l=r.width,r.height local u=d..\",\"..l..\"\\n\"u=u.. image.save(r)..\"\\n\" local c=#tostring(a(d,l,d)) for h=2,#s do local m=s[h] for f=1,d do for w=1,l do if t(r,m,f,w)then u=u..o(a(f,w,d),c)..i(m:getPixel(f,w))end end end r=m u=u..\"\\n\"end return u:sub(1,-2)end function load(s)local h,r=s:match\"(%d+),(%d+)\\n\"s=s:sub(#h+#r+3) h,r=tonumber(h),tonumber(r)local d=((h*3)+1)*r local l={image.load(s:sub(1,d-1))}l[2]=e(l[1])s=s:sub(d+1)local u=#tostring(a(h,r,h)) while# s>0 do if s:sub(1,1)==\"\\n\"then l[#l+1]=e(l[#l])s=s:sub(2)else local c,m=n(s:sub(1,u),h)local f,w,y=s:sub(u+1,u+1),s:sub(u+2,u+2),s:sub(u+3,u+3) f=colour.lookup[f]w=colour.lookup[w]l[#l]:setPixel(c,m,f,w,y) s=s:sub(u+4)end end return l end" a["shaders"]="local e={} e.darken={[colours.white]=colours.lightGrey,[colours.orange]=colours.red,[colours.magenta]=colours.purple,[colours.lightBlue]=colours.cyan,[colours.yellow]=colours.orange,[colours.lime]=colours.green,[colours.pink]=colours.magenta,[colours.grey]=colours.black,[colours.lightGrey]=colours.grey,[colours.cyan]=colours.blue,[colours.purple]=colours.black,[colours.blue]=colours.black,[colours.brown]=colours.black,[colours.green]=colours.black,[colours.red]=colours.brown,[colours.black]=colours.black} e.lighten={[colours.white]=colours.white,[colours.orange]=colours.yellow,[colours.magenta]=colours.pink,[colours.lightBlue]=colours.white,[colours.yellow]=colours.white,[colours.lime]=colours.white,[colours.pink]=colours.white,[colours.grey]=colours.lightGrey,[colours.lightGrey]=colours.white,[colours.cyan]=colours.lightBlue,[colours.purple]=colours.magenta,[colours.blue]=colours.cyan,[colours.brown]=colours.red,[colours.green]=colours.lime,[colours.red]=colours.orange,[colours.black]=colours.grey} e.greyscale={[colours.white]=1,[colours.orange]=256,[colours.magenta]=256,[colours.lightBlue]=256,[colours.yellow]=1,[colours.lime]=256,[colours.pink]=1,[colours.grey]=256,[colours.lightGrey]=256,[colours.cyan]=128,[colours.purple]=128,[colours.blue]=32768,[colours.brown]=32768,[colours.green]=128,[colours.red]=128,[colours.black]=32768} e.sepia={[colours.white]=1,[colours.orange]=2,[colours.magenta]=2,[colours.lightBlue]=2,[colours.yellow]=1,[colours.lime]=2,[colours.pink]=1,[colours.grey]=2,[colours.lightGrey]=2,[colours.cyan]=16,[colours.purple]=16,[colours.blue]=4096,[colours.brown]=4096,[colours.green]=16,[colours.red]=16,[colours.black]=4096}function darken(t)return e.darken[t]or 0 end function lighten(t)return e.lighten[t]or 0 end function greyscale(t)return e.greyscale[t]or 0 end function sepia(t)return e.sepia[t]or 0 end"s["colour"]=o"colour"s["image"]=o"image"s["video"]=o"video" s["shaders"]=o"shaders"return s